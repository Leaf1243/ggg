const canvas = document.getElementById('gameCanvas');  
const ctx = canvas.getContext('2d');  

let player = {  
    x: canvas.width / 2 - 25,  
    y: canvas.height - 30,  
    width: 50,  
    height: 20,  
    speed: 6  
};  

let bullets = [];  
let aliens = [];  
let score = 0;  

// エイリアンの生成  
function createAliens() {  
    for (let i = 0; i < 5; i++) {  
        for (let j = 0; j < 10; j++) {  
            const alien = {  
                x: j * 60 + 30,  
                y: i * 40 + 30,  
                width: 40,  
                height: 30,  
                alive: true,  
            };  
            aliens.push(alien);  
        }  
    }  
}  

// 弾を発射  
function shootBullet() {  
    const bullet = {  
        x: player.x + player.width / 2 - 2.5,  
        y: player.y,  
        width: 5,  
        height: 20,  
        speed: 7,  
    };  
    bullets.push(bullet);  
}  

// 衝突判定  
function checkCollision() {  
    for (let i = bullets.length - 1; i >= 0; i--) {  
        for (let j = aliens.length - 1; j >= 0; j--) {  
            if (bullets[i].x < aliens[j].x + aliens[j].width &&  
                bullets[i].x + bullets[i].width > aliens[j].x &&  
                bullets[i].y < aliens[j].y + aliens[j].height &&  
                bullets[i].y + bullets[i].height > aliens[j].y) {  
                
                bullets.splice(i, 1);  
                aliens[j].alive = false;  
                score++;  
                break;  
            }  
        }  
    }  
}  

// ゲームの更新  
function update() {  
    // 弾を上に移動  
    bullets.forEach(bullet => {  
        bullet.y -= bullet.speed;  
    });  

    // エイリアンを下に移動  
    aliens.forEach(alien => {  
        if (alien.alive) {  
            alien.y += 0.1; // エイリアンが徐々に降りていく  
        }  
    });  

    // 弾が画面外に出たら削除  
    bullets = bullets.filter(bullet => bullet.y > 0);  
    aliens = aliens.filter(alien => alien.alive); // 生きているエイリアンだけ残す  

    checkCollision();  
}  

// 描画  
function draw() {  
    ctx.clearRect(0, 0, canvas.width, canvas.height);  

    // プレイヤー  
    ctx.fillStyle = 'blue';  
    ctx.fillRect(player.x, player.y, player.width, player.height);  

    // 弾  
    ctx.fillStyle = 'yellow';  
    bullets.forEach(bullet => {  
        ctx.fillRect(bullet.x, bullet.y, bullet.width, bullet.height);  
    });  

    // エイリアン  
    ctx.fillStyle = 'green';  
    aliens.forEach(alien => {  
        if (alien.alive) {  
            ctx.fillRect(alien.x, alien.y, alien.width, alien.height);  
        }  
    });  

    // スコア表示  
    ctx.fillStyle = 'white';  
    ctx.font = '20px Arial';  
    ctx.fillText(`スコア: ${score}`, 10, 20);  
}  

// ゲームループ  
function gameLoop() {  
    update();  
    draw();  
    requestAnimationFrame(gameLoop);  
}  

// イベントリスナー  
document.addEventListener('keydown', (event) => {  
    if (event.code === 'ArrowLeft') {  
        player.x -= player.speed;  
        if (player.x < 0) player.x = 0; // 画面外に出ないように  
    }  
    if (event.code === 'ArrowRight') {  
        player.x += player.speed;  
        if (player.x + player.width > canvas.width) player.x = canvas.width - player.width; // 画面外に出ないように  
    }  
    if (event.code === 'Space') {  
        shootBullet();  
    }  
});  

// エイリアンの生成  
createAliens();  

// ゲームスタート  
gameLoop();  
